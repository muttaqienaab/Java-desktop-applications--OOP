package kp_desa;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author deden
 */
public class input extends javax.swing.JFrame {
    
    Connection con;
    Statement stat;
    ResultSet rs;
    String sql;
    DefaultTableModel model;

    public input() {
        initComponents();
        koneksi DB = new koneksi();
        DB.config();
        con = DB.con;
        stat = DB.stm;

        String judul[] = {"Member", "Nama", "Waktu","Tanggal", "Hari", "Harga"};
        model = new DefaultTableModel(judul, 0);
        tJadwal.setModel(model);

        tampilkan("");
    }
  
    void cari (){
    DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Member");
        tbl.addColumn("Nama");
        tbl.addColumn("Waktu");
        tbl.addColumn("Tanggal");
        tbl.addColumn("Hari");
        tbl.addColumn("Harga");
        
        try {
            String sql ="SELECT * FROM jadwal_tb WHERE Nama Like'%" + cari.getText() + "'%" ;
            Connection con =(Connection) koneksi.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Member"),
                    rs.getString("Nama"),
                    rs.getString("Waktu"),
                    rs.getString("Tanggal"),
                    rs.getString("Hari"),
                    rs.getString("Harga")
                });
            }
        } catch (Exception e) {
        }
}
    


       
    public void table()
        {
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Member");
        tbl.addColumn("Nama");
        tbl.addColumn("Waktu");
        tbl.addColumn("Tanggal");
        tbl.addColumn("Hari");
        tbl.addColumn("Harga");

        try {
            Connection conn = koneksi.getConnection(); // Pastikan koneksi telah dibuat dengan benar
            Statement st = conn.createStatement(); // Menggunakan createStatement() dengan huruf kecil
            ResultSet rs = st.executeQuery("SELECT * FROM jadwal");

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Member"),
                    rs.getString("Nama"),
                    rs.getString("Waktu"),
                    rs.getString("Tanggal"),
                    rs.getString("Hari"),
                    rs.getString("Harga")
                });
            }

            tJadwal.setModel(tbl); // Menggunakan tJadwal dengan huruf besar

            JOptionPane.showMessageDialog(null, "Koneksi database berhasil");

            rs.close(); // Menutup ResultSet
            st.close(); // Menutup Statement
            conn.close(); // Menutup koneksi ke database
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Koneksi database gagal" + e.getMessage());
        }
    }
    
            
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        logout = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tJadwal = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Nama = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Waktu = new javax.swing.JTextField();
        Hari = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        Harga = new javax.swing.JTextField();
        ya = new javax.swing.JRadioButton();
        tidak = new javax.swing.JRadioButton();
        cetak = new javax.swing.JButton();
        cari = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        combo_bulan = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        Tanggal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setPreferredSize(new java.awt.Dimension(60, 60));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2233, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 485, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(3000, 3000));
        setMinimumSize(new java.awt.Dimension(965, 615));
        setPreferredSize(new java.awt.Dimension(1090, 723));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(27, 160, 152));
        jLabel2.setText("MEMBER");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 120, 80, 17);

        search.setBackground(new java.awt.Color(222, 185, 146));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search);
        search.setBounds(460, 110, 160, 30);

        logout.setBackground(new java.awt.Color(27, 160, 152));
        logout.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        logout.setForeground(new java.awt.Color(27, 160, 152));
        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(20, 20, 81, 25);

        delete.setBackground(new java.awt.Color(27, 160, 152));
        delete.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        delete.setForeground(new java.awt.Color(27, 160, 152));
        delete.setText("DELETE");
        delete.setDoubleBuffered(true);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(90, 470, 77, 25);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(27, 160, 152));
        jLabel5.setText("HARGA");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 380, 60, 17);

        update.setBackground(new java.awt.Color(27, 160, 152));
        update.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        update.setForeground(new java.awt.Color(27, 160, 152));
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(180, 470, 81, 25);

        tJadwal.setForeground(new java.awt.Color(27, 160, 152));
        tJadwal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tJadwal.setEnabled(false);
        tJadwal.setFocusable(false);
        tJadwal.setGridColor(new java.awt.Color(0, 255, 102));
        tJadwal.setRowSelectionAllowed(false);
        tJadwal.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tJadwalAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tJadwal);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(360, 150, 600, 310);

        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(222, 185, 146));
        jLabel1.setText("JADWAL SEWA GOR ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(360, 20, 260, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(27, 160, 152));
        jLabel3.setText("WAKTU");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(39, 240, 70, 17);

        Nama.setBackground(new java.awt.Color(222, 185, 146));
        getContentPane().add(Nama);
        Nama.setBounds(130, 179, 118, 30);

        save.setBackground(new java.awt.Color(27, 160, 152));
        save.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        save.setForeground(new java.awt.Color(27, 160, 152));
        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save);
        save.setBounds(10, 470, 70, 25);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(27, 160, 152));
        jLabel4.setText("TANGGAL");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 290, 80, 17);

        Waktu.setBackground(new java.awt.Color(222, 185, 146));
        Waktu.setMaximumSize(new java.awt.Dimension(1500, 1500));
        Waktu.setMinimumSize(new java.awt.Dimension(875, 520));
        getContentPane().add(Waktu);
        Waktu.setBounds(130, 238, 118, 22);

        Hari.setBackground(new java.awt.Color(222, 185, 146));
        Hari.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Hari.setForeground(new java.awt.Color(27, 160, 152));
        Hari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SENIN", "SELASA", "RABU", "KAMIS", "JUM'AT", "SABTU", "MINGGU" }));
        getContentPane().add(Hari);
        Hari.setBounds(130, 340, 118, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(27, 160, 152));
        jLabel7.setText("NAMA");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(39, 182, 60, 16);

        Harga.setBackground(new java.awt.Color(222, 185, 146));
        getContentPane().add(Harga);
        Harga.setBounds(130, 380, 118, 22);

        ya.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ya.setForeground(new java.awt.Color(27, 160, 152));
        ya.setText("Member");
        getContentPane().add(ya);
        ya.setBounds(130, 120, 100, 25);

        tidak.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tidak.setForeground(new java.awt.Color(27, 160, 152));
        tidak.setText("Tidak");
        getContentPane().add(tidak);
        tidak.setBounds(130, 150, 80, 25);

        cetak.setBackground(new java.awt.Color(27, 160, 152));
        cetak.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        cetak.setForeground(new java.awt.Color(27, 160, 152));
        cetak.setText("CETAK");
        cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakActionPerformed(evt);
            }
        });
        getContentPane().add(cetak);
        cetak.setBounds(270, 470, 79, 25);

        cari.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        cari.setForeground(new java.awt.Color(27, 160, 152));
        cari.setText("SEARCH");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        getContentPane().add(cari);
        cari.setBounds(360, 120, 83, 25);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(222, 185, 146));
        jLabel6.setText("BUMDES KEMUNING");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(420, 60, 150, 16);

        combo_bulan.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        combo_bulan.setForeground(new java.awt.Color(27, 160, 152));
        combo_bulan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL MONTH", "JANUARI", "FEBRUARI", "MARET", "APRIL", "MEI", "JUNI", "JULI", "AGUSTUS", "SEPTEMBER", "OKTOBER", "NOVEMBER", "DESEMBER" }));
        combo_bulan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_bulanActionPerformed(evt);
            }
        });
        getContentPane().add(combo_bulan);
        combo_bulan.setBounds(780, 120, 160, 22);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(27, 160, 152));
        jLabel8.setText("HARI");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(40, 340, 50, 17);

        Tanggal.setBackground(new java.awt.Color(222, 185, 146));
        getContentPane().add(Tanggal);
        Tanggal.setBounds(130, 290, 120, 22);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("*untuk print laporan sesuai Bulan");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(780, 100, 210, 15);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        
        try {
        String Member="";
            if(ya.isSelected()){Member = ya.getText();
            }else{ Member = tidak.getText();
            }tampilkan("");
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gor_db", "root", "");
        String insertQuery = "INSERT INTO jadwal_tb (Member, Nama, Waktu, Tanggal, Hari, Harga) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement pstmt = cn.prepareStatement(insertQuery);
        pstmt.setString(1, Member);
        pstmt.setString(2, Nama.getText());
        pstmt.setString(3, Waktu.getText());
        pstmt.setString(4, Tanggal.getText());
        pstmt.setString(5, Hari.getSelectedItem().toString());
        pstmt.setString(6, Harga.getText());
        pstmt.executeUpdate();
        tampilkan("");
        cn.close();
    } catch (SQLException ex) {
        Logger.getLogger(input.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_saveActionPerformed

    private void tJadwalAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tJadwalAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tJadwalAncestorAdded

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try {
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gor_db", "root", "");
        String deleteQuery = "DELETE FROM jadwal_tb WHERE Nama = ?";
        PreparedStatement pstmt = cn.prepareStatement(deleteQuery);
        pstmt.setString(1, Nama.getText());
        pstmt.executeUpdate();
        tampilkan("");
        cn.close();
    } catch (SQLException ex) {
        Logger.getLogger(input.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
      try {
        String memberStatus = ya.isSelected() ? ya.getText() : tidak.getText();
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gor_db", "root", "");
        String updateQuery = "UPDATE jadwal_tb SET Nama=?, Member=?, Waktu=?, Tanggal=?, Hari=?, Harga=? WHERE Nama=?";
        PreparedStatement pstmt = cn.prepareStatement(updateQuery);
        pstmt.setString(1, Nama.getText());
        pstmt.setString(2, memberStatus);
        pstmt.setString(3, Waktu.getText());
        pstmt.setString(4, Tanggal.getText());
        pstmt.setString(5, Hari.getSelectedItem().toString());
        pstmt.setString(6, Harga.getText());
        pstmt.setString(7, Nama.getText());
        pstmt.executeUpdate();
        tampilkan("");
        cn.close();
    } catch (SQLException ex) {
        Logger.getLogger(input.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_updateActionPerformed

    private void cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakActionPerformed
    String bulan = combo_bulan.getSelectedItem().toString();
    String angkaBulan = "";

        if (bulan.equals("JANUARI")) {
            angkaBulan = "-01-";
        } else if (bulan.equals("FEBRUARI")) {
            angkaBulan = "-02-";
        } else if (bulan.equals("MARET")) {
            angkaBulan = "-03-";
        } else if (bulan.equals("APRIL")) {
            angkaBulan = "-04-";
        } else if (bulan.equals("MEI")) {
            angkaBulan = "-05-";
        } else if (bulan.equals("JUNI")) {
            angkaBulan = "-06-";
        } else if (bulan.equals("JULI")) {
            angkaBulan = "-07-";
        } else if (bulan.equals("AGUSTUS")) {
            angkaBulan = "-08-";
        } else if (bulan.equals("SEPTEMBER")) {
            angkaBulan = "-09-";
        } else if (bulan.equals("OKTOBER")) {
            angkaBulan = "-10-";
        } else if (bulan.equals("NOVEMBER")) {
            angkaBulan = "-11-";
        } else if (bulan.equals("DESEMBER")) {
            angkaBulan = "-12-";
        }
    String parameterValue = "%"+angkaBulan+"%";
    Map<String, Object> parameters = new HashMap<>();
    parameters.put("valuePilihBulan", parameterValue);
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gor_db", "root", "");

            // Memuat desain laporan menggunakan JasperDesign
            String jrxmlFilePath = new File("").getAbsolutePath() + "/src/kp_desa/print_laporan.jrxml";
            JasperDesign jasperDesign = JRXmlLoader.load(jrxmlFilePath);

            // Compile desain laporan menjadi JasperReport
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);

            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);

            JasperViewer.viewReport(jasperPrint, false); 

        } catch (ClassNotFoundException | SQLException | JRException ex) {
            Logger.getLogger(input.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mencetak laporan: " + ex.getMessage());
        }
    }//GEN-LAST:event_cetakActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        int jawab = JOptionPane.showOptionDialog(this,
                "Apakah Ingin Logout?", 
                "Logout", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE,null,null,null);
        if(jawab==JOptionPane.YES_OPTION){
            JOptionPane.showMessageDialog(this,"Berhasil Logout");
         this.setVisible(false);
        new Login().setVisible(true);
        }   
    }//GEN-LAST:event_logoutActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
        
    String searchTxt = search.getText();
        if (searchTxt == null || searchTxt.equals("")) {
            tampilkan("");
        } else {
            tampilkan(searchTxt);
        }
    
    }//GEN-LAST:event_cariActionPerformed

    private void combo_bulanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_bulanActionPerformed
        // TODO add your handling code here:
          // Ambil nilai yang dipilih dari combobox
    String selectedMonth = (String) combo_bulan.getSelectedItem();
    
    // Refresh tampilan tabel dengan data yang sesuai
    tampilkan("");
    }//GEN-LAST:event_combo_bulanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new input().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Harga;
    private javax.swing.JComboBox<String> Hari;
    private javax.swing.JTextField Nama;
    private javax.swing.JTextField Tanggal;
    private javax.swing.JTextField Waktu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cari;
    private javax.swing.JButton cetak;
    private javax.swing.JComboBox<String> combo_bulan;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JButton save;
    private javax.swing.JTextField search;
    private javax.swing.JTable tJadwal;
    private javax.swing.JRadioButton tidak;
    private javax.swing.JButton update;
    private javax.swing.JRadioButton ya;
    // End of variables declaration//GEN-END:variables

   private void tampilkan(String nama) {
        int row = tJadwal.getRowCount();
        String bulan = combo_bulan.getSelectedItem().toString();
        String angkaBulan = "";

        if (bulan.equals("JANUARI")) {
            angkaBulan = "-01-";
        } else if (bulan.equals("FEBRUARI")) {
            angkaBulan = "-02-";
        } else if (bulan.equals("MARET")) {
            angkaBulan = "-03-";
        } else if (bulan.equals("APRIL")) {
            angkaBulan = "-04-";
        } else if (bulan.equals("MEI")) {
            angkaBulan = "-05-";
        } else if (bulan.equals("JUNI")) {
            angkaBulan = "-06-";
        } else if (bulan.equals("JULI")) {
            angkaBulan = "-07-";
        } else if (bulan.equals("AGUSTUS")) {
            angkaBulan = "-08-";
        } else if (bulan.equals("SEPTEMBER")) {
            angkaBulan = "-09-";
        } else if (bulan.equals("OKTOBER")) {
            angkaBulan = "-10-";
        } else if (bulan.equals("NOVEMBER")) {
            angkaBulan = "-11-";
        } else if (bulan.equals("DESEMBER")) {
            angkaBulan = "-12-";
        }else{
            angkaBulan ="all";
        }
        for (int a = 0; a < row; a++) {
            model.removeRow(0);
        }
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/gor_db", "root", "");
            ResultSet rs;
            if (nama.equals("")) {
                if (angkaBulan=="all"){
                    rs = cn.createStatement().executeQuery("SELECT * FROM jadwal_tb");
                }else{
                    rs = cn.createStatement().executeQuery("SELECT * FROM jadwal_tb where Tanggal LIKE '%"+angkaBulan+"%' "); 
                }
            } else {
                String query = "SELECT * FROM jadwal_tb WHERE lower(Nama) LIKE ?";
                PreparedStatement preparedStatement = cn.prepareStatement(query);
                preparedStatement.setString(1, "%" + nama.toLowerCase() + "%");
                rs = preparedStatement.executeQuery();
            }

            while (rs.next()) {
                String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),rs.getString(6)};
                model.addRow(data);
            }

            // Setelah selesai menggunakan ResultSet, pastikan untuk menutupnya.
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(input.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}




